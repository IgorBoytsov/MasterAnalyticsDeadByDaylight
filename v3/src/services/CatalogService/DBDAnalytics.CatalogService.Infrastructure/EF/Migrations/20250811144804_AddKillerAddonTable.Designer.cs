// <auto-generated />
using System;
using DBDAnalytics.CatalogService.Infrastructure.EF.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DBDAnalytics.CatalogService.Infrastructure.EF.Migrations
{
    [DbContext(typeof(CatalogContext))]
    [Migration("20250811144804_AddKillerAddonTable")]
    partial class AddKillerAddonTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DBDAnalytics.CatalogService.Domain.Models.Killer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("AbilityImageKey")
                        .HasColumnType("text")
                        .HasColumnName("AbilityImageKey");

                    b.Property<string>("KillerImageKey")
                        .HasColumnType("text")
                        .HasColumnName("KillerImageKey");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Name")
                        .UseCollation("case_insensitive");

                    b.Property<int>("OldId")
                        .HasColumnType("integer")
                        .HasColumnName("OldId");

                    b.HasKey("Id");

                    b.ToTable("Killers", (string)null);
                });

            modelBuilder.Entity("DBDAnalytics.CatalogService.Domain.Models.KillerAddon", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("ImageKey")
                        .HasColumnType("text")
                        .HasColumnName("ImageKey");

                    b.Property<Guid>("KillerId")
                        .HasColumnType("uuid")
                        .HasColumnName("KillerId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Name")
                        .UseCollation("case_insensitive");

                    b.Property<int>("OldId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("KillerId");

                    b.ToTable("KillerAddons", (string)null);
                });

            modelBuilder.Entity("DBDAnalytics.CatalogService.Domain.Models.KillerPerk", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer")
                        .HasColumnName("CategoryId");

                    b.Property<string>("ImageKey")
                        .HasColumnType("text")
                        .HasColumnName("ImageKey");

                    b.Property<Guid>("KillerId")
                        .HasColumnType("uuid")
                        .HasColumnName("KillerId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("Name")
                        .UseCollation("case_insensitive");

                    b.Property<int>("OldId")
                        .HasColumnType("integer")
                        .HasColumnName("OldId");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("KillerId");

                    b.ToTable("KillerPerks", (string)null);
                });

            modelBuilder.Entity("DBDAnalytics.CatalogService.Domain.Models.KillerPerkCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Name")
                        .UseCollation("case_insensitive");

                    b.Property<int>("OldId")
                        .HasColumnType("integer")
                        .HasColumnName("OldId");

                    b.HasKey("Id");

                    b.ToTable("KillerPerkCategories", (string)null);
                });

            modelBuilder.Entity("DBDAnalytics.CatalogService.Domain.Models.KillerAddon", b =>
                {
                    b.HasOne("DBDAnalytics.CatalogService.Domain.Models.Killer", "Killer")
                        .WithMany("KillerAddons")
                        .HasForeignKey("KillerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Killer");
                });

            modelBuilder.Entity("DBDAnalytics.CatalogService.Domain.Models.KillerPerk", b =>
                {
                    b.HasOne("DBDAnalytics.CatalogService.Domain.Models.KillerPerkCategory", "Category")
                        .WithMany("KillerPerks")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DBDAnalytics.CatalogService.Domain.Models.Killer", "Killer")
                        .WithMany("KillerPerks")
                        .HasForeignKey("KillerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Killer");
                });

            modelBuilder.Entity("DBDAnalytics.CatalogService.Domain.Models.Killer", b =>
                {
                    b.Navigation("KillerAddons");

                    b.Navigation("KillerPerks");
                });

            modelBuilder.Entity("DBDAnalytics.CatalogService.Domain.Models.KillerPerkCategory", b =>
                {
                    b.Navigation("KillerPerks");
                });
#pragma warning restore 612, 618
        }
    }
}
